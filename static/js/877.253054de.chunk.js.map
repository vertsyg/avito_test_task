{"version":3,"file":"static/js/877.253054de.chunk.js","mappings":"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","sources":["services/games.ts","utils/convertFilterOptions.ts","store/action-creator/games.ts","hooks/useAction.ts","hooks/useTypedSelector.ts","utils/filterOptions.ts","components/FilterOption.tsx","components/FiltersList.tsx","components/GamesItem.tsx","components/GamesList.tsx","pages/MainPage.tsx","utils/checkGameFromCache.ts","utils/convertTime.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { IGame } from \"../types/games\";\r\n\r\nexport const fetchGamesByAllParameters = async (platform: string, genre: string, sorting: string):Promise<IGame[]> => {\r\n  \r\n  const URL = `https://www.freetogame.com/api/games?platform=${platform}&category=${genre}&sort-by=${sorting}&callback=myCallback`\r\n\r\n  const response = await axios.get(URL)\r\n\r\n  return response.data\r\n}\r\n\r\nexport const fetchGamesWithoutCategory = async (platform: string, sorting: string): Promise<IGame[]> => {\r\n  const URL = `https://www.freetogame.com/api/games?platform=${platform}&sort-by=${sorting}`\r\n  \r\n    const response = await axios.get(URL)\r\n    \r\n    return response.data\r\n}\r\n\r\n\r\nexport const getOneGame = async (gameId: number): Promise<IGame> => {\r\n  const URL = `https://www.freetogame.com/api/game?id=${gameId}`\r\n\r\n  const result = await  axios.get(URL)\r\n\r\n  return result.data\r\n}","export const convertFilterOption = (option:string) => {\r\n    if (option === 'All Platforms' || option === 'All Genres') {\r\n        return 'all'\r\n    } else if (option === 'PC (Windows)') {\r\n        return 'pc'\r\n    } else if (option === 'Web Browser') {\r\n        return 'browser'\r\n    } else {\r\n        return option.toLowerCase().replace(' ', '-')\r\n    }\r\n}","import { Dispatch } from \"redux\"\r\nimport { GamesAction, GamesActionTypes, IGame  } from \"../../types/games\"\r\nimport { fetchGamesByAllParameters, fetchGamesWithoutCategory, getOneGame } from \"../../services/games\"\r\nimport { getGameFromCache } from \"../../utils/checkGameFromCache\"\r\nimport { convertFilterOption } from \"../../utils/convertFilterOptions\"\r\n\r\nexport const fetchGames = (platform: string, genre: string, sorting: string) => {\r\n  return async (dispatch: Dispatch<GamesAction>) => {\r\n      try {\r\n          dispatch({ type: GamesActionTypes.FETCH_GAMES });\r\n\r\n          const games = genre === 'all' ? await fetchGamesWithoutCategory(platform, sorting) : await fetchGamesByAllParameters(platform, genre, sorting)\r\n\r\n          dispatch({ type: GamesActionTypes.FETCH_GAMES_SUCCESS, payload: games });\r\n      } catch (error) {\r\n          dispatch({\r\n              type: GamesActionTypes.FETCH_GAMES_ERROR,\r\n              payload: `Oops! Can't load the data. ${error}`\r\n          });\r\n      }\r\n  }\r\n}\r\n\r\nexport const fetchOneGame = (gameId: number) => {\r\n  return async (dispatch: Dispatch<GamesAction>) => {\r\n    try {\r\n      dispatch({ type: GamesActionTypes.FETCH_ONE_GAME });\r\n      const game: IGame = await getOneGame(gameId); \r\n\r\n      const currentTime = new Date().getTime();\r\n      const cachedGame = {\r\n        data: game,\r\n        timestamp: currentTime,\r\n      };\r\n      localStorage.setItem(`game_${gameId}`, JSON.stringify(cachedGame));\r\n\r\n      dispatch({\r\n        type: GamesActionTypes.FETCH_ONE_GAME_SUCCESS,\r\n        payload: game,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: GamesActionTypes.FETCH_ONE_GAME_ERROR,\r\n        payload: `Oops! Can't load the data. ${error}`,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const fetchGameFromCache = (gameId: number) => {\r\n\r\n  return (dispatch:Dispatch<GamesAction>) =>  {\r\n    dispatch({ type: GamesActionTypes.FETCH_ONE_GAME })\r\n\r\n    const data = getGameFromCache(gameId)\r\n\r\n    dispatch({type: GamesActionTypes.FETCH_ONE_GAME_SUCCESS, payload: data})\r\n  }\r\n}\r\n\r\nexport const changeGenre = (genre:string) => {\r\n  return async (dispatch: Dispatch<GamesAction>) => {\r\n    dispatch({type: GamesActionTypes.CHANGE_GENRE, payload: convertFilterOption(genre)})\r\n  }\r\n}\r\n\r\nexport const changePlatform = (platform: string) => {\r\n  return async (dispatch: Dispatch<GamesAction>) => {\r\n    dispatch({type: GamesActionTypes.CHANGE_PLATFORM, payload: convertFilterOption(platform)})\r\n  }\r\n}\r\n\r\nexport const changeSorting = (filter: string) => {\r\n  return async (dispatch: Dispatch<GamesAction>) => {\r\n    dispatch({type: GamesActionTypes.CHANGE_SORTING, payload: convertFilterOption(filter)})\r\n  }\r\n}","import { useDispatch } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport * as GamesActionCreator from '../store/action-creator/games'\r\n\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(GamesActionCreator, dispatch)\r\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","export const platformOptions = ['All Platforms', 'PC (Windows)', 'Web Browser']\r\n\r\nexport const genreOptions =  [\r\n  'All Genres',\r\n  'MMORPG',\r\n  'Shooter',\r\n  'Strategy',\r\n  'MOBA',\r\n  'Racing',\r\n  'Sports',\r\n  'Social',\r\n  'Sandbox',\r\n  'Open World',\r\n  'Survival',\r\n  'PVP',\r\n  'PVE',\r\n  'Pixel',\r\n  'Voxel',\r\n  'Zombie',\r\n  'Turn Based',\r\n  'First Person',\r\n  'Third Person',\r\n  'Top-Down',\r\n  'Tank',\r\n  'Space',\r\n  'Sailing',\r\n  'Side-Scroller',\r\n  'Superhero',\r\n  'Permadeath',\r\n  'Card',\r\n  'Battle Royale',\r\n  'MMO',\r\n  'MMOFPS',\r\n  'MMOTPS',\r\n  '3D',\r\n  '2D',\r\n  'Anime',\r\n  'Fantasy',\r\n  'Sci-Fi',\r\n  'Fighting',\r\n  'Action RPG',\r\n  'Action',\r\n  'Military',\r\n  'Martial Arts',\r\n  'Flight',\r\n  'Low-Spec',\r\n  'Tower Defense',\r\n  'Horror',\r\n  'MMORTS'\r\n]\r\n\r\nexport const sortOptions = [\r\n  'Relevance',\r\n  'Popularity',\r\n  'Release Date',\r\n  'Alphabetical'\r\n]","import { Select } from \"antd\"\r\n\r\ninterface FilterOptionProps {\r\n  label: string,\r\n  options: string[],\r\n  handleFilterChange: (selectedOption: string) => void\r\n}\r\n\r\nconst FilterOption = ({ label, options, handleFilterChange}: FilterOptionProps) => {\r\n  const handleChange = (selectedValue: string) => {\r\n      handleFilterChange(selectedValue); \r\n  }\r\n  return (\r\n    <div style={{margin: '5px'}}>\r\n      <label>{label}</label>\r\n      <Select defaultValue={options[0]} onChange={handleChange}>\r\n      {options.map(option => (\r\n        <Select.Option \r\n          key={option} \r\n          value={option}\r\n        >\r\n          {option}\r\n        </Select.Option>\r\n      ))}\r\n      </Select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterOption","import { genreOptions, platformOptions, sortOptions } from \"../utils/filterOptions\"\r\nimport FilterOption from \"./FilterOption\"\r\nimport { useActions } from \"../hooks/useAction\"\r\n\r\nconst FiltersList = () => {\r\n\r\n    const {changeGenre, changePlatform, changeSorting} = useActions()\r\n\r\n    return (\r\n        <div style={{marginTop:'10px', marginBottom:'10px', display: 'flex', flexDirection: 'row', flexWrap: 'wrap'}}>\r\n            <FilterOption \r\n                label={'Platform: '}\r\n                options={platformOptions}\r\n                handleFilterChange={changePlatform}\r\n            />\r\n            <FilterOption \r\n                label={'Genre: '}\r\n                options={genreOptions}\r\n                handleFilterChange={changeGenre}\r\n            />\r\n            <FilterOption \r\n                label={'Sort By: '}\r\n                options={sortOptions}\r\n                handleFilterChange={changeSorting}\r\n            />           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FiltersList","import { Card } from 'antd';\r\nimport { convertTime } from '../utils/convertTime';\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface GamesItemProps {\r\n    id: number;\r\n    title: string;\r\n    release_date: string;\r\n    publisher: string;\r\n    genre: string;\r\n    thumbnail: string;\r\n}\r\n\r\nconst GamesItem = ({id, title, release_date, publisher, genre, thumbnail} : GamesItemProps) => {\r\n    return (\r\n            <Link to={`/game/${id}`}>\r\n                <Card\r\n                    hoverable\r\n                    cover={<img alt=\"Poster\" src={thumbnail}/>}\r\n                >\r\n                    <h2>{title}</h2>\r\n                    <p>{genre}</p>\r\n                    <p>{publisher}</p>\r\n                    <p>{convertTime(release_date)}</p>\r\n                </Card>\r\n            </Link>\r\n      );\r\n}\r\n\r\nexport default GamesItem","import {useEffect} from 'react'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport type {} from 'redux-thunk/extend-redux'\r\nimport { useActions } from '../hooks/useAction';\r\nimport GamesItem from './GamesItem';\r\nimport {  Spin,Row, Col} from 'antd';\r\n\r\nconst GamesList = () => {\r\n    const {error, games, loading, platform, genre, sorting } = useTypedSelector(state => state)\r\n    const {fetchGames} = useActions()\r\n\r\n    useEffect(() => {\r\n        fetchGames(platform, genre, sorting)\r\n    }, [platform, genre, sorting]);\r\n\r\n    if (loading) {\r\n        return <Spin spinning={loading}/>\r\n    }\r\n\r\n    if (error) {\r\n        return <h1>{error}</h1>\r\n    }\r\n\r\n    return (\r\n        <Row gutter={[16, 16]}> \r\n            {games.map(({ id, title, release_date, publisher, genre, thumbnail }) => (\r\n                <Col key={id} xs={24} sm={12} md={8} lg={6} xl={6}> \r\n                    <GamesItem\r\n                        id={id}\r\n                        title={title}\r\n                        release_date={release_date}\r\n                        publisher={publisher}\r\n                        genre={genre}\r\n                        thumbnail={thumbnail}\r\n                    />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default GamesList","import FiltersList from \"../components/FiltersList\"\r\nimport GamesList from \"../components/GamesList\"\r\n\r\nconst MainPage = () => {\r\n    return (\r\n    <div style={{ width: '85vw', margin:'0 auto' }}>\r\n            <h1>Free-To-Play Games</h1>\r\n            <FiltersList/>\r\n        <GamesList/>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default MainPage","export const checkGameFromCache = (gameId: number) => {\r\n    const cachedGame = localStorage.getItem(`game_${gameId}`)\r\n    if (cachedGame) {\r\n        const gameParsed = JSON.parse(cachedGame)\r\n        const cacheTime = gameParsed.timestamp\r\n        const currentTime = new Date().getTime()\r\n\r\n        if (currentTime - cacheTime < 300000) {\r\n            return gameParsed.data\r\n        } else {\r\n            localStorage.removeItem(`game_${gameId}`)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getGameFromCache = (gameId: number) => {\r\n    const cachedGame = localStorage.getItem(`game_${gameId}`)\r\n    if (cachedGame) {\r\n        return JSON.parse(cachedGame).data\r\n    }\r\n}","export const convertTime = (data: string) => {\r\n    return data.split('-').reverse().join('.')\r\n}"],"names":["fetchGamesByAllParameters","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","platform","genre","sorting","URL","response","wrap","_context","prev","next","concat","axios","get","sent","abrupt","data","stop","_x","_x2","_x3","apply","arguments","fetchGamesWithoutCategory","_ref2","_callee2","_context2","_x4","_x5","getOneGame","_ref3","_callee3","gameId","result","_context3","_x6","convertFilterOption","option","toLowerCase","replace","fetchGames","dispatch","games","type","GamesActionTypes","FETCH_GAMES","t0","FETCH_GAMES_SUCCESS","payload","t1","FETCH_GAMES_ERROR","fetchOneGame","game","currentTime","cachedGame","FETCH_ONE_GAME","Date","getTime","timestamp","localStorage","setItem","JSON","stringify","FETCH_ONE_GAME_SUCCESS","FETCH_ONE_GAME_ERROR","fetchGameFromCache","getGameFromCache","changeGenre","CHANGE_GENRE","changePlatform","_ref4","_callee4","_context4","CHANGE_PLATFORM","changeSorting","filter","_ref5","_callee5","_context5","CHANGE_SORTING","useActions","useDispatch","bindActionCreators","GamesActionCreator","useTypedSelector","useSelector","platformOptions","genreOptions","sortOptions","label","options","handleFilterChange","_jsxs","style","margin","children","_jsx","Select","defaultValue","onChange","selectedValue","map","Option","value","_useActions","marginTop","marginBottom","display","flexDirection","flexWrap","FilterOption","id","title","release_date","publisher","thumbnail","Link","to","Card","hoverable","cover","alt","src","convertTime","_useTypedSelector","state","error","loading","useEffect","Spin","spinning","Row","gutter","Col","xs","sm","md","lg","xl","GamesItem","width","FiltersList","GamesList","checkGameFromCache","getItem","gameParsed","parse","cacheTime","removeItem","split","reverse","join"],"sourceRoot":""}